name: CI - Publish Eslint Config

on:
  push:
    branches:
      - master

jobs:
  publish-grp:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: NodeJs Environment
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set package registry GRP
        run: npm config set registry https://npm.pkg.github.com

      - name: Github package registry authentication
        run: npm set //npm.pkg.github.com/:_authToken ${{ secrets.PUBLISH_TOKEN_GRP }}

      - name: Check if version exists on npm
        id: check-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          EXISTS=$(npm view @brainylab/eslint-config@$VERSION version)
          if [ "$EXISTS" == "$VERSION" ]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Publish Packages on GRP
        run: npm publish --provenance --access public
        if: steps.check-version.outputs.exists == 'false'

  publish-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    needs: [publish-grp]
    steps:
      - uses: actions/checkout@v3

      - name: NodeJs Environment
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Npm registry authentication
        run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Check if version exists on npm
        id: check-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          EXISTS=$(npm view @brainylab/eslint-config@$VERSION version)
          if [ "$EXISTS" == "$VERSION" ]; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Publish Packages on NPM
        run: npm publish --provenance --access public
        if: steps.check-version.outputs.exists == 'false'

